class Controller0Controller < ApplicationController
  def action0

    ##blank

      # Implemeted by Rails for all objects.
      # Difference from `empty`: works on all objects, including `nil`
      # while empty throws a NoMethodError for nil.

        nil.blank? == true or raise()

    ##pass variables to templates

      # Variables defined here will become available
      # for the template that will use this view.

        @var0 = 0
        @var1 = 1

    ##db functions

      ##find

          @model0s = Model0.find(:all)

      ##save

        # Saves a model instance to the database.

          #@model0 = Model0.new(model0_params)
          #@model0.save

    ##params

      # Contains URL + POST parameters + other things like the controller and action name.

        @params = params

    ##redirect_to

      # Return an http redirect to another address.

        #redirect_to :action => 'list'

    ##render

      # Render any erb instead of the default (determined by the name of this function).

        #render :action => 'new'

  end

  def action1
  end

  # Typcial CRUD actions:

    def list
      @model0s = Model0.find(:all)
    end

    # Detaion on one item.
    def show
        @model0 = Model0.find(params[:id])
    end

    # GET action that shows the creation form.
    # The POST is treated by `create`
    def new
        @model0 = Model0.new
        @model1s = Model1.find(:all)
    end

    # POST action that will actually create the new model
    # The initial  GET is typically generated by the `new` method.
    def create
      @model0 = Model0.new(model0_params)
      if @model0.save
        redirect_to action: 'list'
      else
        @model1s = Model1.find(:all)
        render action: 'new'
      end
    end

    def edit
        @model0 = Model0.find(params[:id])
        @model1s = Model1.find(:all)
    end

    def update
        @model0 = Model0.find(params[:id])
        if @model0.update_attributes(model0_params)
          redirect_to action: 'show', id: @model0
        else
          @model1s = Model1s.find(:all)
          render action: 'edit'
        end
    end

    def delete
        Model0.find(params[:id]).destroy
        redirect_to action: 'list'
    end

  private

    # This determines which parameters can be sent through POST methods.
    # It is mandatory to whitelist possible parameters or they won't work.
    # Otherwise, end users could do naughty things like attempt to set an ID.
    def model0_params
      params.require(:model0).permit(:string_col, :integer_col, :model1_id)
    end
end
